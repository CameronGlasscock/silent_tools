#!/usr/bin/env python

import distutils.spawn
import os
import sys
sys.path.append(os.path.dirname(distutils.spawn.find_executable("silent_tools.py")))
import silent_tools
from silent_tools import eprint
import re

# Don't throw an error when someone uses head
from signal import signal, SIGPIPE, SIG_DFL
signal(SIGPIPE, SIG_DFL) 

if (len(sys.argv) == 1):
    eprint("")
    eprint('silentdropcorruptmodels by bcov - drop models with wrong number of residues')
    eprint("Usage:")
    eprint("        silentdropcorruptmodels myfile.silent > fixed.silent")
    sys.exit(1)

silent_file = sys.argv[1]

silent_index = silent_tools.get_silent_index( silent_file )

sys.stdout.write( silent_tools.silent_header( silent_index ) )
sys.stdout.flush()

with open(silent_file) as sf:
    for tag in silent_index['tags']:

        structure = silent_tools.get_silent_structure_file_open( sf, silent_index, tag )

        sequence_chunks = silent_tools.get_sequence_chunks( structure )
        sequence = "".join(sequence_chunks)
        seqlen = len(sequence)

        num_res_lines = 0
        for line in structure:
            if ( line.startswith("L") ):
                num_res_lines += 1

        if ( seqlen != num_res_lines ):
            eprint("silentdropcorruptmodels: Found %5i res expected %5i res: %s"%
                (num_res_lines, seqlen, tag))
        else:
            sys.stdout.write("".join(structure))
            sys.stdout.flush()


